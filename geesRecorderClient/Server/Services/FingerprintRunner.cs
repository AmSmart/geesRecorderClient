using Microsoft.Extensions.Hosting;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace geesRecorderClient.Server.Services
{
    public class FingerprintRunner
    {        
        private readonly string _fingerprintEnrolScriptPath;
        private readonly string _fingerprintDeleteScriptPath;
        private readonly string _fingerprintSearchScriptPath;
        private const string ScriptsFolderPath = "Scripts";

        public FingerprintRunner(IHostEnvironment hostEnvironment)
        {
            string projectRootPath = hostEnvironment.ContentRootPath;
            _fingerprintEnrolScriptPath = Path.Combine(projectRootPath, ScriptsFolderPath, "fingerprint_enrol.py");
            _fingerprintDeleteScriptPath = Path.Combine(projectRootPath, ScriptsFolderPath, "fingerprint_delete.py");
            _fingerprintSearchScriptPath = Path.Combine(projectRootPath, ScriptsFolderPath, "fingerprint_search.py");
        }

        public void Enrol()
        {            
            Run(_fingerprintEnrolScriptPath, "");
        }

        public void Delete()
        {
            Run(_fingerprintDeleteScriptPath, "");
        }
        
        public void Search()
        {
            Run(_fingerprintSearchScriptPath, "");
        }

        private string Run(string cmd, string args)
        {
            ProcessStartInfo start = new ProcessStartInfo();
            start.FileName = "python";
            start.Arguments = string.Format("\"{0}\" \"{1}\"", cmd, args);
            start.UseShellExecute = false;// Do not use OS shell
            start.CreateNoWindow = true; // We don't need new window
            start.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
            start.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
            using (Process process = Process.Start(start))
            {
                using (StreamReader reader = process.StandardOutput)
                {
                    string stderr = process.StandardError.ReadToEnd(); // Here are the exceptions from our Python script
                    string result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")
                    return result;
                }
            }
        }
    }
}
